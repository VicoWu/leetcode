package leetcode;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by wuchang at 1/5/18
 * Question 454

 # 普通解法
 在A中选定一个数字，然后在B/C/D三个集合中进行3Sum运算。由于3sum的时间复杂度是O(n^2)，因此，这个算法的时间复杂度是O(n^3)

 # 空间换时间
 由于是4个集合，上面的普通解法相当于1+3=4，那么，我们能否实现2+2=4，即两个集合两个结合，然后没两个集合的时间复杂度是O(n^2)，最后让时间复杂度是O(n^2)呢？
 因此，我们现在A、B上进行遍历获取A\B上元素相加的所有集合，放在sum1中，然后在C\D上进行遍历获取从C/D上元素相加的所有集合，放到sum2中，并且，sum1/sum2都是一个map，key是相加的和，value是这个he对应的组合数量。然后，只要sum1和sum2中的key相加为0就可以了。这样，整体时间复杂度是O(n^2) + O(n^2) + O(n^2) = O(n^2) ，即，计算sum1的时间，计算sum2的时间，和根据sum1和sum2求最终结果的时间。
 我还在此基础上进行了优化，如果输入集合中有重复数字，则不用再对重复数字进行统计：
 ```
 int sameNum=1;
 //我在这里进行优化，如果A中有重复数字，则统计重复数字的个数，不用每个重复数字都计算，这种优化对输入数组中有大量重复数字的情况特别有效
 while(i<A.length-1 && A[i] == A[i+1])
 {
 sameNum++;i++;
 }
 ```


 这一题我的思路是先确定三个数字的中间数字，然后按照与讨论中相同的方式去确定答案。但是这样做有一个问题非常不好处理，就是为了去除重复结果，必须处理输入的串中的重复字符，比如`[-2,-2,4]`，或者`[-4,2,2]`，如果我用`nums[m]!=nums[m+1]（m是三个数字中的中间数字）`来做过滤，那么`[-2,-2,4]`会被漏掉，而如果我用nums[m-1]!=nums[m]做过滤，那么`[-4,2,2]`会被过滤掉。
 但是，如果按照[讨论区](https://leetcode.com/problems/3sum/discuss/7380)中的做法，先确定三个数字中的第一个数字，然后再确定三个数字中的剩下两个数字，只需要按照`i > 0 && num[i] != num[i-1]`中进行过滤，就可以了，即，如果输入中出现了相同数字如[-2,-2,4]或者`[-4,2,2]`这样的，只需要将第一次出现的-2作为第一个数字就行了，以后再出现-2都不再处理，应为第一次处理-2的时候肯定已经覆盖了所有情况。


 几个跟sum相关的问题：
 [Two sum](https://leetcode.com/problems/two-sum/description/)
 [3Sum](https://leetcode.com/problems/3sum/)
 [3Sum Closest](https://leetcode.com/problems/3sum-closest/)
 [4Sum](https://leetcode.com/problems/4sum/submissions/1)
 [4sum II](https://leetcode.com/problems/4sum-ii/discuss/93920)


 */

public class FourSumII {


    /**
     * 这是我的解法，在fourSumCount1的基础上做了一些优化
     *
     * @param A
     * @param B
     * @param C
     * @param D
     * @return
     */
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
         Arrays.sort(A);
        Arrays.sort(B);Arrays.sort(C);Arrays.sort(D);
        int c=0;
        Map<Integer,Integer> sum1 = twoSum(A,B);
        Map<Integer,Integer> sum2 = twoSum(C,D);

        for(Integer key:sum1.keySet()){
            c+= sum1.get(key) * sum2.getOrDefault(-key,0);
        }

        return c;

    }


    /**
     * 计算集合A和B中数字相加的和，map的key中保存了对应的和，value代表这个和对应的组合数量
     * @param A
     * @param B
     * @return
     */
    public Map<Integer,Integer> twoSum(int[] A,int[] B){
        Map<Integer,Integer> res = new HashMap<>();
        for(int i=0;i<A.length;i++){
            int sameNum=1;
            //我在这里进行优化，如果A中有重复数字，则统计重复数字的个数，不用每个重复数字都计算，这种优化对输入数组中有大量重复数字的情况特别有效
            while(i<A.length-1 && A[i] == A[i+1])
            {
                sameNum++;i++;
            }

            for(int j=0;j<B.length;j++){

                int sameNum2=1;
                //我在这里进行优化，如果B中有重复数字，则统计重复数字的个数，不用每个重复数字都计算，这种优化对输入数组中有大量重复数字的情况特别有效
                while(j<B.length-1 && B[j] == B[j+1])
                {
                    sameNum2++;j++;
                }

                int sum =  A[i]+B[j];
                if(!res.containsKey(sum))
                 res.put(sum,0);
                res.put(sum,res.get(sum)+sameNum*sameNum2);
            }
        }
        return res;
    }


    /**
     * 这是别人的通用解法
     * @param A
     * @param B
     * @param C
     * @param D
     * @return
     */
    public int fourSumCount1(int[] A, int[] B, int[] C, int[] D) {
        long start = System.currentTimeMillis();
        Map<Integer, Integer> map = new HashMap<>();

        for(int i=0; i<C.length; i++) {
            for(int j=0; j<D.length; j++) {
                int sum = C[i] + D[j];
                map.put(sum, map.getOrDefault(sum, 0) + 1);
            }
        }

        int res=0;
        for(int i=0; i<A.length; i++) {
            for(int j=0; j<B.length; j++) {
                res += map.getOrDefault(-1 * (A[i]+B[j]), 0);
            }
        }
        long end = System.currentTimeMillis();

        System.out.println(end - start);
        return res;
    }


    public static void main(String[] args) {

         int[] A={-1,-1};int[] B={-1,1};int[] C={-1,1};int[] D={1,-1};
        //int[] A = {-11, 4, 9, -2, -21, -17, -13, 10, -20, -18, 0, -29, -25, -26, -29, -17, -27, -2, -15, -8, -19, -21, 5, -11, -2, -1, -31, 2, -21, -32, -28, -11, -29, 8, -17, -27, -5, 0, 3, 6, 6, -32, 10, 9, -10, -19, -11, -32, 8, -23, -10, -7, -4, -3, 8, 2, 9, 4, -22, -26, -32, -12, 0, -22, -11, 4, 0, -18, -10, -11, 4, 8, -16, -3, -32, -3, -24, -5, 2, 7, -27, -12, -7, -14, 2, -29, -7, -21, -8, 1, -25, -22, -16, -28, -27, -22, -30, -12, -26, -19};
        //int[] B = {-23, -18, -19, -7, -23, -31, -12, -9, -24, -7, -21, -5, -8, -15, -4, 1, 8, -16, -7, -32, -10, 8, -21, -17, -30, -19, -11, -28, -9, 7, -18, -5, 8, 4, -21, -8, 4, -24, -32, -17, -8, 7, 9, 10, -20, -24, -27, -27, 1, 3, -4, -7, -21, -23, -5, -26, -10, 1, -6, -18, 7, -6, 3, 8, -20, -23, -8, -10, -22, 3, -32, -18, -29, -13, -29, -1, -10, -3, -28, -30, -17, 9, -20, 1, -15, -8, -7, -10, -27, -31, -5, 1, 3, -28, -16, -22, -18, -14, 0, 1};
        //int[] C = {-2, -7, -18, -23, -13, 7, -18, 3, -28, -32, -7, 3, -22, -10, -23, -1, -3, -30, -14, 2, -27, 5, 3, -28, -1, 0, 7, -9, -20, -20, -24, -29, -18, -13, -27, 3, -4, -25, -4, -5, -7, 5, -8, -4, -13, -14, -12, 4, -13, 10, -7, -21, -18, -12, -10, -29, 4, -8, 1, 4, -4, -4, -15, 8, -7, -19, -13, -30, -31, -32, -24, -30, -10, -18, 8, -32, -20, 5, -10, -8, -26, -20, -19, -8, -28, -19, -15, -24, -31, 0, -18, -1, -18, -5, -6, -2, 7, -24, -17, 6};
        //int[] D = {-9, 4, 5, 5, -17, -26, 5, -18, 9, -6, -10, -13, -32, -9, -22, -11, -3, -16, -31, -4, -13, -8, -16, -15, -10, -13, -12, -22, -12, 2, -28, -3, -11, -3, -17, -23, -5, -9, -29, -17, -15, -5, -26, -27, -1, -14, 6, 6, 2, -23, 10, 10, -11, -7, 7, -10, -20, -3, -19, -28, -8, -11, -28, -20, -2, 2, -18, -18, 0, -20, 8, -12, -20, -28, -28, 4, -31, -25, 4, -2, 0, 6, -28, 5, -32, 10, -31, 5, 9, -21, -16, -9, 0, -20, -26, 8, -3, -16, 1, -24};
        int[] A1 = {-175000000,-50000000,225000000,-225000000,125000000,-75000000,150000000,150000000,-200000000,100000000,75000000,-175000000,0,75000000,50000000,125000000,125000000,100000000,-175000000,-75000000,200000000,-50000000,125000000,-75000000,75000000,250000000,25000000,-125000000,25000000,-150000000,200000000,-175000000,100000000,0,-250000000,-75000000,150000000,-175000000,150000000,-250000000,-125000000,200000000,50000000,150000000,75000000,250000000,100000000,-225000000,-75000000,-75000000,100000000,-25000000,175000000,-225000000,-75000000,150000000,-225000000,-250000000,-125000000,125000000,-100000000,-250000000,200000000,-225000000,125000000,25000000,75000000,250000000,-225000000,150000000,-50000000,75000000,-125000000,25000000,-50000000,-75000000,-25000000,-175000000,-25000000,-75000000,100000000,-200000000,-100000000,200000000,50000000,-175000000,125000000,-100000000,-150000000,25000000,-175000000,125000000,-200000000,-125000000,-175000000,-25000000,250000000,-50000000,-225000000,150000000,-25000000,-75000000,50000000,175000000,-100000000,50000000,125000000,-25000000,-225000000,125000000,150000000,-100000000,-100000000,200000000,-200000000,-225000000,200000000,-125000000,150000000,25000000,-250000000,-225000000,250000000,250000000,200000000,200000000,-100000000,-150000000,-50000000,-50000000,175000000,125000000,75000000,250000000,-150000000,-50000000,-150000000,-100000000,100000000,0,75000000,-200000000,100000000,125000000,50000000,50000000,-25000000,-25000000,0,-150000000,-75000000,75000000,50000000,-225000000,-225000000,-250000000,-100000000,-100000000,-125000000,50000000,-75000000,-25000000,150000000,-250000000,-50000000,225000000,50000000,-75000000,-75000000,150000000,250000000,-50000000,25000000,-50000000,200000000,-50000000,-200000000,-200000000,-75000000,-150000000,200000000,-100000000,-100000000,250000000,-225000000,100000000,0,225000000,-100000000,125000000,-200000000,-225000000,225000000,-100000000,-25000000,25000000,-100000000,-125000000,100000000,-50000000,250000000,-50000000,225000000,-250000000,-50000000,-100000000,-200000000,-150000000,25000000,75000000,200000000,200000000,-25000000,-150000000,200000000,-175000000,200000000,-125000000,-75000000,-150000000,-225000000,0,-125000000,-100000000,-250000000,25000000,200000000,-75000000,50000000,-225000000,-100000000,-175000000,-25000000,-75000000,100000000,50000000,-150000000,-75000000,0,-250000000,50000000,50000000,75000000,150000000,-100000000,25000000,175000000,200000000,-25000000,-50000000,-175000000,-200000000,-125000000,-225000000,-100000000,125000000,250000000,-200000000,175000000,50000000,-25000000,-50000000,250000000,150000000,225000000,125000000,-150000000,75000000,-100000000,100000000,-100000000,-50000000,-125000000,-25000000,-50000000,-75000000,225000000,125000000,100000000,-250000000,50000000,-75000000,100000000,-225000000,-100000000,-25000000,0,-175000000,75000000,25000000,-25000000,-25000000,200000000,250000000,125000000,-250000000,175000000,-25000000,100000000,-25000000,-50000000,0,200000000,-125000000,75000000,-75000000,-100000000,50000000,-175000000,75000000,50000000,100000000,200000000,150000000,-250000000,150000000,-150000000,225000000,150000000,150000000,225000000,150000000,-150000000,0,250000000,225000000,-175000000,-250000000,225000000,-25000000,200000000,125000000,50000000,25000000,25000000,175000000,100000000,250000000,125000000,-25000000,-75000000,0,50000000,50000000,-250000000,75000000,250000000,-150000000,250000000,125000000,-100000000,225000000,-75000000,-250000000,125000000,50000000,-100000000,-75000000,-100000000,100000000,-125000000,75000000,-25000000,225000000,-225000000,225000000,175000000,-250000000,-125000000,-25000000,100000000,25000000,-25000000,-75000000,75000000,250000000,-250000000,175000000,-100000000,-75000000,50000000,225000000,-225000000,-100000000,25000000,-75000000,150000000,-250000000,-250000000,-225000000,-100000000,-175000000,50000000,-75000000,0,225000000,-25000000,200000000,-50000000,225000000,250000000,75000000,150000000,25000000,-25000000,-125000000,-150000000,75000000,250000000,-25000000,-225000000,75000000,100000000,-50000000,0,-100000000,-150000000,25000000,-125000000,200000000,-175000000,75000000,-50000000,-175000000,100000000,0,150000000,125000000,150000000,-200000000,-250000000,25000000,-125000000,-125000000,50000000,-250000000,-100000000,100000000,125000000,-50000000,-75000000,25000000,125000000,25000000,-250000000,250000000,-100000000,75000000,250000000,225000000,75000000,-200000000,-150000000,225000000,175000000,75000000,175000000,0,75000000,0,-100000000,-250000000,0,0,-75000000,175000000,25000000,-250000000,200000000,125000000,-75000000,-25000000,125000000,-225000000,175000000,-75000000,-225000000,50000000,75000000,-125000000,-225000000,0,-150000000,-75000000,125000000,-125000000,150000000,-25000000,-250000000,225000000,175000000,25000000,-100000000,75000000,175000000,-75000000,-75000000,-200000000,-75000000,100000000};
        int[] B1 = {-125000000,0,75000000,225000000,225000000,25000000,-200000000,100000000,175000000,175000000,50000000,-125000000,125000000,-125000000,250000000,250000000,-125000000,125000000,75000000,-200000000,-50000000,-225000000,100000000,150000000,225000000,150000000,75000000,100000000,-125000000,-100000000,-75000000,25000000,-125000000,-225000000,-175000000,-200000000,-175000000,225000000,150000000,-175000000,75000000,250000000,75000000,125000000,175000000,175000000,175000000,0,-50000000,-150000000,125000000,250000000,-225000000,-75000000,250000000,-225000000,150000000,-150000000,200000000,-75000000,-75000000,125000000,175000000,-100000000,-100000000,125000000,-250000000,200000000,-225000000,-200000000,25000000,50000000,175000000,25000000,-250000000,100000000,-50000000,125000000,-175000000,25000000,25000000,100000000,-75000000,225000000,150000000,200000000,150000000,-225000000,-50000000,175000000,150000000,-150000000,-225000000,75000000,-175000000,150000000,125000000,-250000000,225000000,-175000000,-150000000,0,-225000000,0,-50000000,-125000000,50000000,-150000000,-225000000,-125000000,200000000,225000000,200000000,200000000,-25000000,-175000000,175000000,-225000000,-50000000,-200000000,175000000,75000000,-100000000,50000000,-25000000,100000000,-100000000,-175000000,175000000,-150000000,-225000000,-125000000,-225000000,-200000000,125000000,-100000000,-175000000,100000000,150000000,-125000000,-225000000,75000000,250000000,50000000,-200000000,-150000000,-175000000,-250000000,250000000,50000000,-125000000,200000000,175000000,-150000000,-100000000,-225000000,150000000,-150000000,-25000000,-175000000,-225000000,-100000000,175000000,50000000,25000000,-50000000,-100000000,-100000000,125000000,200000000,50000000,-125000000,50000000,150000000,25000000,-250000000,-75000000,-50000000,125000000,-150000000,125000000,-175000000,-25000000,-200000000,225000000,75000000,-50000000,150000000,100000000,-150000000,225000000,50000000,-25000000,125000000,225000000,225000000,-100000000,100000000,-50000000,-200000000,175000000,25000000,0,-75000000,-25000000,200000000,100000000,0,175000000,-50000000,225000000,-250000000,50000000,200000000,-50000000,-175000000,-75000000,-100000000,-175000000,-175000000,175000000,25000000,25000000,200000000,-50000000,150000000,-125000000,-75000000,75000000,-50000000,-125000000,125000000,-50000000,225000000,25000000,100000000,0,-250000000,-150000000,100000000,-150000000,-175000000,225000000,-200000000,250000000,150000000,225000000,-25000000,-175000000,-25000000,200000000,75000000,100000000,175000000,125000000,-75000000,100000000,-100000000,-25000000,125000000,250000000,-100000000,-25000000,250000000,-75000000,200000000,200000000,125000000,200000000,-25000000,200000000,125000000,100000000,200000000,125000000,25000000,150000000,150000000,200000000,100000000,125000000,-50000000,-225000000,225000000,75000000,-100000000,25000000,200000000,50000000,0,-50000000,-25000000,-125000000,75000000,250000000,250000000,-150000000,100000000,-200000000,-125000000,0,-175000000,-25000000,25000000,-25000000,250000000,-100000000,-25000000,250000000,200000000,-225000000,200000000,0,0,125000000,-150000000,-150000000,-225000000,100000000,-200000000,-225000000,-250000000,-250000000,0,50000000,225000000,75000000,125000000,-250000000,25000000,25000000,250000000,125000000,75000000,-225000000,-150000000,125000000,100000000,-100000000,-75000000,175000000,200000000,-125000000,225000000,100000000,-75000000,-25000000,225000000,-100000000,-50000000,25000000,-125000000,-175000000,-100000000,-150000000,225000000,-25000000,25000000,-100000000,-150000000,175000000,-100000000,50000000,50000000,225000000,125000000,-175000000,150000000,150000000,150000000,-200000000,-175000000,-150000000,25000000,150000000,-75000000,100000000,100000000,-200000000,250000000,225000000,-125000000,-250000000,125000000,-150000000,-150000000,-225000000,-250000000,125000000,0,250000000,-125000000,-125000000,200000000,25000000,50000000,-50000000,200000000,-100000000,250000000,125000000,150000000,-100000000,-150000000,100000000,100000000,175000000,100000000,-100000000,125000000,225000000,200000000,225000000,0,-150000000,150000000,225000000,-150000000,75000000,75000000,-125000000,-50000000,250000000,-175000000,175000000,0,250000000,250000000,0,50000000,-125000000,125000000,-100000000,-125000000,-225000000,-50000000,100000000,100000000,250000000,0,50000000,175000000,175000000,175000000,-125000000,50000000,-200000000,200000000,-200000000,100000000,25000000,-175000000,-200000000,-125000000,-200000000,-150000000,0,25000000,225000000,200000000,-200000000,250000000,-200000000,-225000000,-150000000,125000000,25000000,250000000,125000000,-250000000,-250000000,200000000,-200000000,-225000000,-75000000,225000000,-125000000,75000000,225000000,150000000,50000000,-150000000,250000000,125000000,125000000,200000000,-250000000,225000000,-200000000,125000000,200000000,200000000,225000000,-50000000,50000000,250000000,125000000,100000000,75000000,-225000000};
        int[] C1 =  {-100000000,-175000000,-75000000,25000000,200000000,100000000,-125000000,125000000,-125000000,-175000000,-150000000,25000000,225000000,225000000,75000000,125000000,250000000,100000000,-200000000,-175000000,-250000000,50000000,-150000000,-250000000,25000000,175000000,-225000000,100000000,-225000000,250000000,225000000,-75000000,125000000,-250000000,-150000000,200000000,-225000000,-75000000,100000000,-100000000,-125000000,-50000000,-225000000,-100000000,50000000,-175000000,225000000,175000000,-125000000,250000000,75000000,-225000000,-125000000,-75000000,225000000,125000000,-225000000,150000000,150000000,200000000,50000000,25000000,0,225000000,-200000000,-175000000,-50000000,175000000,150000000,-125000000,-250000000,-125000000,-150000000,225000000,-225000000,175000000,-225000000,150000000,-200000000,150000000,-125000000,225000000,-225000000,75000000,-200000000,-100000000,-250000000,-125000000,50000000,250000000,-150000000,-250000000,-100000000,-25000000,-100000000,75000000,75000000,175000000,250000000,-75000000,-50000000,175000000,0,-125000000,250000000,-175000000,-50000000,-100000000,-175000000,-75000000,-125000000,-100000000,250000000,-225000000,-250000000,200000000,-250000000,100000000,200000000,250000000,-75000000,225000000,75000000,-75000000,-250000000,-125000000,175000000,175000000,-175000000,25000000,100000000,-75000000,200000000,-200000000,-175000000,150000000,25000000,50000000,50000000,0,175000000,-200000000,-25000000,150000000,100000000,250000000,-25000000,-125000000,0,0,-75000000,175000000,-100000000,-25000000,-175000000,75000000,-175000000,125000000,150000000,-250000000,-50000000,-25000000,125000000,250000000,-200000000,250000000,-225000000,175000000,100000000,-100000000,-150000000,25000000,-225000000,250000000,75000000,-75000000,-100000000,-50000000,150000000,250000000,175000000,-25000000,175000000,-175000000,250000000,-50000000,-150000000,-200000000,-175000000,200000000,-225000000,-25000000,-25000000,-50000000,150000000,25000000,75000000,-200000000,-100000000,-200000000,-75000000,-125000000,150000000,-50000000,-175000000,250000000,25000000,100000000,200000000,-200000000,200000000,-175000000,75000000,-100000000,-100000000,-50000000,-150000000,25000000,250000000,0,-50000000,150000000,-175000000,-150000000,-250000000,-250000000,250000000,100000000,150000000,-175000000,200000000,125000000,225000000,50000000,-175000000,50000000,-25000000,-100000000,100000000,225000000,125000000,-200000000,25000000,-150000000,50000000,200000000,225000000,-75000000,-225000000,250000000,-250000000,-125000000,150000000,150000000,200000000,-50000000,0,-75000000,100000000,25000000,-175000000,0,-200000000,-25000000,125000000,100000000,0,-200000000,-75000000,-125000000,-75000000,125000000,125000000,200000000,-50000000,-100000000,25000000,-200000000,250000000,-100000000,-50000000,-25000000,-150000000,-150000000,50000000,-175000000,25000000,-150000000,-125000000,175000000,-125000000,100000000,-175000000,-100000000,-25000000,200000000,100000000,75000000,0,50000000,-150000000,-25000000,-75000000,50000000,225000000,-75000000,100000000,125000000,-200000000,-225000000,75000000,125000000,-150000000,250000000,-225000000,-25000000,125000000,-50000000,75000000,-100000000,225000000,-125000000,125000000,250000000,-125000000,-50000000,-250000000,-200000000,125000000,75000000,-25000000,-200000000,-175000000,-225000000,-75000000,200000000,-150000000,50000000,150000000,25000000,-150000000,-250000000,-250000000,200000000,250000000,125000000,-75000000,200000000,-175000000,-75000000,175000000,-225000000,25000000,25000000,0,-175000000,125000000,-50000000,-150000000,-25000000,75000000,50000000,-150000000,250000000,-75000000,-25000000,100000000,100000000,-225000000,25000000,200000000,175000000,250000000,-100000000,50000000,-25000000,200000000,-75000000,75000000,25000000,25000000,25000000,150000000,-150000000,-200000000,0,-175000000,100000000,75000000,150000000,125000000,175000000,175000000,-50000000,150000000,0,-125000000,150000000,175000000,175000000,-75000000,250000000,250000000,-100000000,-225000000,-200000000,-200000000,150000000,-175000000,250000000,175000000,-50000000,-100000000,-50000000,150000000,200000000,-175000000,75000000,75000000,100000000,125000000,-50000000,-100000000,-50000000,-50000000,200000000,175000000,-175000000,-150000000,175000000,-100000000,25000000,25000000,225000000,-225000000,50000000,200000000,125000000,250000000,-25000000,150000000,-150000000,-175000000,50000000,-125000000,-200000000,150000000,200000000,225000000,250000000,-125000000,225000000,0,225000000,25000000,-250000000,100000000,225000000,0,225000000,-100000000,-75000000,-50000000,-200000000,25000000,-125000000,-200000000,-175000000,100000000,100000000,-75000000,250000000,-150000000,-75000000,-25000000,175000000,0,250000000,50000000,100000000,25000000,-150000000,175000000,-175000000,200000000,150000000,200000000,-100000000,-25000000,125000000,-250000000,125000000,-225000000,-225000000,175000000,-225000000,75000000,-200000000,-100000000,-75000000};
        int[] D1 =  {150000000,150000000,-75000000,-100000000,50000000,150000000,0,175000000,25000000,-25000000,225000000,250000000,225000000,-250000000,-25000000,250000000,-75000000,-150000000,100000000,50000000,-25000000,75000000,-225000000,-250000000,-25000000,50000000,25000000,-225000000,-25000000,-150000000,-250000000,225000000,-175000000,0,25000000,200000000,200000000,200000000,50000000,0,-50000000,200000000,25000000,200000000,-150000000,-150000000,200000000,-150000000,125000000,-225000000,-200000000,100000000,-175000000,-100000000,-225000000,0,0,100000000,-100000000,0,200000000,-250000000,0,-250000000,-125000000,-150000000,0,150000000,-100000000,225000000,-225000000,-175000000,-100000000,-50000000,-225000000,-100000000,-50000000,175000000,-200000000,-200000000,-150000000,225000000,-225000000,0,0,-200000000,125000000,25000000,175000000,-200000000,75000000,75000000,250000000,-150000000,225000000,-250000000,-225000000,25000000,-100000000,175000000,-200000000,50000000,-150000000,-175000000,-225000000,100000000,250000000,-150000000,-75000000,-25000000,-225000000,225000000,-125000000,-175000000,75000000,-50000000,50000000,200000000,-50000000,200000000,-25000000,-200000000,-75000000,200000000,75000000,25000000,-225000000,0,75000000,-175000000,50000000,25000000,-25000000,-225000000,-200000000,175000000,-225000000,-225000000,-100000000,75000000,-125000000,75000000,100000000,125000000,-150000000,-150000000,-250000000,175000000,-50000000,150000000,-125000000,125000000,100000000,50000000,0,0,-125000000,-75000000,25000000,-175000000,150000000,50000000,125000000,-250000000,125000000,-250000000,250000000,225000000,-200000000,-75000000,50000000,175000000,-100000000,-125000000,-150000000,150000000,-250000000,-75000000,100000000,150000000,25000000,-250000000,225000000,100000000,200000000,100000000,-100000000,0,-175000000,25000000,-125000000,50000000,150000000,-100000000,225000000,-175000000,150000000,-100000000,100000000,125000000,75000000,225000000,125000000,-100000000,-75000000,-175000000,-225000000,-200000000,-50000000,150000000,150000000,100000000,75000000,150000000,125000000,-150000000,125000000,-125000000,-175000000,50000000,250000000,-50000000,-75000000,-250000000,-50000000,-125000000,-225000000,-50000000,50000000,-225000000,200000000,-75000000,225000000,100000000,-250000000,225000000,-25000000,-100000000,0,150000000,175000000,-175000000,225000000,-200000000,-100000000,-250000000,0,250000000,225000000,150000000,-175000000,-25000000,-200000000,-225000000,200000000,-50000000,225000000,250000000,-125000000,100000000,200000000,-200000000,-50000000,200000000,-150000000,-175000000,125000000,150000000,200000000,225000000,-100000000,200000000,-150000000,-175000000,0,100000000,-200000000,200000000,-50000000,-50000000,50000000,75000000,200000000,-150000000,100000000,-75000000,100000000,-250000000,225000000,225000000,-125000000,0,25000000,200000000,-150000000,-75000000,-100000000,25000000,-175000000,25000000,100000000,25000000,225000000,-75000000,100000000,-25000000,-150000000,-250000000,-75000000,100000000,-125000000,75000000,225000000,0,25000000,150000000,-75000000,-100000000,100000000,0,-100000000,100000000,150000000,200000000,-50000000,175000000,150000000,-225000000,50000000,-225000000,200000000,-100000000,-150000000,125000000,150000000,-125000000,0,225000000,-50000000,-125000000,25000000,150000000,-175000000,-125000000,-250000000,250000000,125000000,-75000000,-75000000,150000000,50000000,-250000000,-150000000,200000000,75000000,100000000,-175000000,125000000,25000000,-225000000,50000000,50000000,175000000,-25000000,-75000000,-150000000,25000000,0,-75000000,200000000,-225000000,200000000,-25000000,0,100000000,75000000,175000000,75000000,-150000000,0,-75000000,-100000000,-75000000,-250000000,250000000,50000000,-125000000,-250000000,150000000,-125000000,-225000000,75000000,-100000000,-25000000,-125000000,75000000,-75000000,25000000,-225000000,-125000000,-225000000,50000000,-225000000,-250000000,125000000,250000000,-150000000,-250000000,250000000,-50000000,100000000,-75000000,-200000000,50000000,50000000,-225000000,100000000,-125000000,-75000000,-200000000,150000000,-125000000,-25000000,-75000000,225000000,0,-225000000,-225000000,175000000,-25000000,50000000,-125000000,-175000000,150000000,-225000000,-100000000,50000000,200000000,175000000,-100000000,-125000000,-25000000,-175000000,-75000000,-75000000,175000000,100000000,175000000,-125000000,100000000,100000000,200000000,250000000,-100000000,-150000000,100000000,-75000000,-250000000,150000000,200000000,-125000000,-200000000,-100000000,175000000,125000000,-25000000,150000000,50000000,-25000000,25000000,-200000000,125000000,50000000,-75000000,250000000,-100000000,-175000000,-175000000,-50000000,-150000000,-150000000,-25000000,-250000000,200000000,-25000000,75000000,-175000000,200000000,225000000,175000000,-225000000,-50000000,-25000000,125000000,-100000000,75000000,25000000,75000000,225000000,250000000};

        System.out.println(new FourSumII().fourSumCount(A1, B1, C1, D1));
        System.out.println(new FourSumII().fourSumCount1(A1, B1, C1, D1));
    }
}
